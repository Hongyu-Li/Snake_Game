{"ast":null,"code":"var _jsxFileName = \"/Users/amuro/demo/src/Main.tsx\";\nimport { Snake, DIRECTION } from './Snake';\nimport { Apple } from './apple';\nimport React from 'react';\nimport { HEIGHT, WIDTH, CELL_WIDTH, CELL_HEIGHT } from './constant';\nconst WHITE = \"rgb(255,255,255)\";\nconst RED = \"rgb(255,0,0)\";\nconst BLACK = \"rgb(0,0,0)\";\nconst LEFT = 37;\nconst RIGHT = 39;\nconst UP = 38;\nconst DOWN = 40;\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.snake = new Snake();\n    this.apple = new Apple(200, 200);\n    this.intervalId = void 0;\n\n    this.handle_keydown = event => {\n      switch (event.keyCode) {\n        case LEFT:\n          this.turnLeft();\n          break;\n\n        case UP:\n          this.turnUp();\n          break;\n\n        case RIGHT:\n          this.turnRight();\n          break;\n\n        case DOWN:\n          this.turnDown();\n          break;\n      }\n    };\n\n    this.draw = () => {\n      const ctx = this.refs.canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n      ctx.fillStyle = RED;\n      this.snake.body.forEach(body => {\n        ctx.fillRect(body.x, body.y, CELL_WIDTH, CELL_HEIGHT);\n      });\n      ctx.fillStyle = BLACK;\n      ctx.fillRect(this.apple.body.x, this.apple.body.y, CELL_WIDTH, CELL_HEIGHT);\n\n      if (this.snake.body[0].x === this.apple.body.x && this.snake.body[0].y === this.snake.body[0].y) {\n        this.snake.extend();\n        this.apple.regenerate(0, 0);\n      }\n    };\n\n    this.clear = () => {\n      clearInterval(this.intervalId);\n    };\n\n    this.turnRight = () => {\n      this.snake.direction = DIRECTION.RIGHT;\n    };\n\n    this.turnLeft = () => {\n      this.snake.direction = DIRECTION.LEFT;\n    };\n\n    this.turnUp = () => {\n      this.snake.direction = DIRECTION.UP;\n    };\n\n    this.turnDown = () => {\n      this.snake.direction = DIRECTION.DOWN;\n    };\n\n    this.turnWrapper = () => {};\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.draw();\n      this.snake.move();\n    }, 300);\n    document.addEventListener(\"keydown\", this.handle_keydown);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: WIDTH,\n      height: HEIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.turnRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"RIGHT\"), React.createElement(\"button\", {\n      onClick: this.turnLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"LEFT\"), React.createElement(\"button\", {\n      onClick: this.turnUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"UP\"), React.createElement(\"button\", {\n      onClick: this.turnDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"DOWN\"), React.createElement(\"button\", {\n      onClick: this.clear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/amuro/demo/src/Main.tsx"],"names":["Snake","DIRECTION","Apple","React","HEIGHT","WIDTH","CELL_WIDTH","CELL_HEIGHT","WHITE","RED","BLACK","LEFT","RIGHT","UP","DOWN","Main","Component","snake","apple","intervalId","handle_keydown","event","keyCode","turnLeft","turnUp","turnRight","turnDown","draw","ctx","refs","canvas","getContext","clearRect","fillStyle","body","forEach","fillRect","x","y","extend","regenerate","clear","clearInterval","direction","turnWrapper","componentDidMount","setInterval","move","document","addEventListener","render"],"mappings":"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","sourcesContent":["\nimport { Snake, DIRECTION } from './Snake';\nimport { Apple } from './apple';\nimport React, {Component} from 'react';\nimport {HEIGHT, WIDTH, CELL_WIDTH, CELL_HEIGHT} from './constant'\n\nconst WHITE = \"rgb(255,255,255)\"\nconst RED = \"rgb(255,0,0)\";\nconst BLACK = \"rgb(0,0,0)\";\nconst LEFT = 37;\nconst RIGHT = 39;\nconst UP = 38;\nconst DOWN = 40;\n\nexport default class Main extends React.Component{\n    snake: Snake =  new Snake;\n    apple: Apple = new Apple(200,200);\n    intervalId: any;\n\n    componentDidMount() {\n        this.intervalId = setInterval(()=> {\n            this.draw();\n            this.snake.move();\n        }, 300);\n        document.addEventListener(\"keydown\", this.handle_keydown)\n    }\n\n    handle_keydown = (event: any) => {\n        switch(event.keyCode) {\n            case LEFT: this.turnLeft(); break;\n            case UP: this.turnUp(); break;\n            case RIGHT: this.turnRight(); break;\n            case DOWN: this.turnDown(); break;\n        }\n    }\n\n    draw = () => {\n        const ctx: CanvasRenderingContext2D= ((this.refs.canvas as any).getContext(\"2d\")) as CanvasRenderingContext2D\n        ctx.clearRect(0,0,WIDTH, HEIGHT);\n        ctx.fillStyle = RED;\n        this.snake.body.forEach(body => {\n            ctx.fillRect (body.x,body.y, CELL_WIDTH, CELL_HEIGHT);\n        });\n        ctx.fillStyle = BLACK;\n        ctx.fillRect(this.apple.body.x, this.apple.body.y, CELL_WIDTH, CELL_HEIGHT);  \n        if(this.snake.body[0].x === this.apple.body.x && this.snake.body[0].y === this.snake.body[0].y) {\n            this.snake.extend();\n            this.apple.regenerate(0, 0);\n        }\n    }\n\n    clear = () => {\n        clearInterval(this.intervalId);\n    }\n\n    turnRight = () => {\n        this.snake.direction = DIRECTION.RIGHT;\n    }\n\n    turnLeft = () => {\n        this.snake.direction = DIRECTION.LEFT;\n    }\n\n    turnUp = () => {\n        this.snake.direction = DIRECTION.UP;\n    }\n\n    turnDown = () => {\n        this.snake.direction = DIRECTION.DOWN;\n    }\n\n    turnWrapper = () => {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref='canvas' width={WIDTH} height={HEIGHT}></canvas>\n                <button onClick={this.turnRight}>RIGHT</button>\n                <button onClick={this.turnLeft}>LEFT</button>\n                <button onClick={this.turnUp}>UP</button>\n                <button onClick={this.turnDown}>DOWN</button>\n                <button onClick={this.clear}>Clear</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}